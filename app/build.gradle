apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'

android {
    compileSdk 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.kotlin"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    // 添加DataBinding的支持 必须有 kapt
    dataBinding {
        enabled =true
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'

    // Lifecycle库
    def lifecycle_version = "2.6.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // ViewModel库
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData库
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Lifecycles only (without ViewModel or LiveData)库
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel 库
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // Retrofit库
    // Retrofit只要看到你增加了 suspend关键字，会自动帮你切换到 IO异步线程 去执行 网络请求登录，登录完成后，还会恢复当前协程体的线程
    // if suspend { withContext(Dispatchers.IO) { 登录请求API 丢这里面来了 } }
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:retrofit-mock:2.7.2"
    implementation "com.squareup.retrofit2:converter-gson:2.7.2"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation "com.squareup.retrofit2:converter-scalars:2.7.2"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.7.2"

    // Gson库
    implementation "com.google.code.gson:gson:2.8.6"

    // Okhttp库
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    // 日志的拦截器，也可以自行选择
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
}